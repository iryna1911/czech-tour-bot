import asyncio
import logging
from datetime import datetime, timedelta
from typing import Dict, List, Optional, Tuple
import json
import aiohttp
import re
from bs4 import BeautifulSoup
from dataclasses import dataclass, asdict
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

@dataclass
class TourOffer:
    """–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ç—É—Ä–∞"""
    title: str
    destination: str
    price: int  # –≤ –∫—Ä–æ–Ω–∞—Ö
    currency: str
    date_start: str
    date_end: str
    duration: int
    hotel_name: str
    hotel_stars: Optional[int]
    beach_distance: Optional[str]
    meals: str
    operator: str
    url: str
    last_seen: datetime

class CzechTourMonitor:
    def __init__(self, bot_token: str):
        self.bot_token = bot_token
        self.app = Application.builder().token(bot_token).build()
        
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ (–ø–æ–¥ –≤–∞—à–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è)
        self.search_params = {
            'max_price': 25000,  # –∫—Ä–æ–Ω—ã
            'departure_date': '2024-09-08',
            'duration_min': 6,
            'duration_max': 7,
            'adults': 2,
            'children_age_2': 1,
            'max_beach_distance': 200,  # –º–µ—Ç—Ä—ã
            'departure_city': 'Praha'
        }
        
        # –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç—É—Ä—ã (–¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤)
        self.found_tours: Dict[str, TourOffer] = {}
        self.user_chat_id: Optional[int] = None
        self.monitoring_active = True
        
        # URL —Ç—É—Ä—Ñ–∏—Ä–º
        self.tour_operators = {
            'cedok': 'https://www.cedok.cz',
            'fischer': 'https://www.fischer.cz', 
            'eximtours': 'https://www.eximtours.cz',
            'blue_style': 'https://www.blue-style.cz',
            'invia': 'https://www.invia.cz'
        }
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        self.app.add_handler(CommandHandler("start", self.start_command))
        self.app.add_handler(CommandHandler("status", self.status_command))
        self.app.add_handler(CommandHandler("settings", self.settings_command))
        self.app.add_handler(CommandHandler("found_tours", self.found_tours_command))
        self.app.add_handler(CallbackQueryHandler(self.button_callback))

    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        self.user_chat_id = update.effective_chat.id
        
        welcome_text = f"""
üèñÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ–Ω–∏—Ç–æ—Ä —Ç—É—Ä–æ–≤ –ø–æ –ß–µ—Ö–∏–∏!

üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞:
üí∞ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {self.search_params['max_price']:,} Kƒç
üìÖ –î–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞: {self.search_params['departure_date']}
‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {self.search_params['duration_min']}-{self.search_params['duration_max']} –¥–Ω–µ–π
üë• –í–∑—Ä–æ—Å–ª—ã–µ: {self.search_params['adults']}, –¥–µ—Ç–∏ 2 –ª–µ—Ç: {self.search_params['children_age_2']}
üèñÔ∏è –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –ø–ª—è–∂–∞: –¥–æ {self.search_params['max_beach_distance']}–º
‚úàÔ∏è –í—ã–ª–µ—Ç –∏–∑: {self.search_params['departure_city']}

üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∞–π—Ç–æ–≤:
‚Ä¢ ƒåedok
‚Ä¢ Fischer 
‚Ä¢ Eximtours
‚Ä¢ Blue Style
‚Ä¢ Invia

‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–π —á–∞—Å
üöÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω!

–ö–æ–º–∞–Ω–¥—ã:
/status - —Å—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
/settings - –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞
/found_tours - –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ç—É—Ä—ã
        """
        
        await update.message.reply_text(welcome_text)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        if not hasattr(self, 'monitoring_task'):
            self.monitoring_task = asyncio
